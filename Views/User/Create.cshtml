@model MealsToGo.ViewModels.UserDetailViewModel


@{
    ViewBag.Title = "Add user details";
   
}
<script language=Javascript>
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
</script>

@using (Html.BeginForm("Create", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    @Html.ValidationSummary(false,"", new { @class = "error" })
    @Html.HiddenFor(model => model.CreatedBy)
    @Html.HiddenFor(model => model.UpdatedBy)
     @Html.HiddenFor(model => model.FirstName)
    @Html.HiddenFor(model => model.UserId)
    <div class="cont-main">
        <h1>Add user details</h1>
        <div class="cont">
            <div class="cont-rit">
                <ul class="gen-form">
                    <li>
                        <p>First Name  </p>
                        @*@Html.DisplayFor(model => model.FirstName, new { @class = "gen-ftb" })*@
                        @Html.DisplayFor(model => model.FirstName, new { @class = "gen-ftb" })
                       
                    </li>
                    <li>
                        <p>Last Name <span class="required">(required)</span></p>
                        @Html.EditorFor(model => model.LastName, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.LastName, string.Empty,new { @class="required"})
                    </li>
                    <li>
                        <p>Address  <span class="required">(required)</span></p>
                        @Html.EditorFor(model => model.Address.Address1, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.Address.Address1,string.Empty,new { @class="required"})
                    </li>
                    <li>
                        <p>Address 2</p>
                        @Html.EditorFor(model => model.Address.Address2, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.Address.Address2)
                    </li>
                    <li>
                        <p>City <span class="required">(required)</span></p>
                        @Html.EditorFor(model => model.Address.City, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.Address.City,string.Empty,new { @class="required"})
                    </li>
                    <li>
                        <p>Zip <span class="required">(required)</span></p>
                        @Html.EditorFor(model => model.Address.Zip, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.Address.Zip,string.Empty,new { @class="required"})
                    </li>
                    <li>
                        <p>State/Province <span class="required">(required)</span></p>
                        @Html.EditorFor(model => model.Address.Province, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.Address.Province,string.Empty,new { @class="required"})
                    </li>
                    <li>
                        <p>Country <span class="required">(required)</span></p>
                        @Html.DropDownListFor(x => x.Address.CountryID, Model.CountryDDList, "Country", new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.Address.CountryID,string.Empty,new { @class="required"})
                    </li>
                     
                     <li>
                        <p>Check if you wish to Advertise Food?</p>
                         @Html.CheckBoxFor(model => model.CheckIfSeller)

                    <li>
                    <li>
                        <p>Kitchen Type</p>
                        @Html.DropDownListFor(x => x.KitchenTypeID, Model.KitchenTypeDDList, "KitchenType", new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.KitchenTypeID,string.Empty,new { @class="required"})
                    </li>
                    <li>
                        <p>Kitchen Name</p>
                        @Html.EditorFor(model => model.KitchenName, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.PassportNumber)
                    </li>
                    <li>
                        <p>Telephone</p>
                        @Html.EditorFor(model => model.Address.Telephone, new { onkeypress = "return isNumberKey(event)", @class = "gen-ftb" })
                        <input id="Telephone" type="text" maxlength="16" onkeypress="return isNumberKey(event)" class="gen-ftb" />
                          @*@Html.ValidationMessageFor(model => model.Address.Telephone,string.Empty,new { @class="required"})*@
                    </li>
                    <li>
                        <p>Mobile</p>
                        @Html.EditorFor(model => model.Mobile, new { onkeypress = "return isNumberKey(event)", @class = "gen-ftb" })

                        <input id="Mobile" type="text" maxlength="16" onkeypress="return isNumberKey(event)" class="gen-ftb" />
                        @*@Html.ValidationMessageFor(model => model.Mobile,string.Empty,new { @class="required"})*@
                    </li>
                    <li>
                        <p>SkypeID</p>
                        @Html.EditorFor(model => model.SkypeID, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.SkypeID,string.Empty,new { @class="required"})
                    </li>
                    <li>
                        <p>Profile Photo:</p>


                        <label>
                            @Html.TextBoxFor(model => model.Photo, new { type = "file", accept = ".png,.bmp,.jpg,.tif,.gif" })
                            @Html.ValidationMessageFor(model => model.Photo)
                        </label>
                        <label class="agree"></label>
                    </li>
                   @* <li>
                        <p>Identification Number</p>
                        @Html.EditorFor(model => model.IdentificationNumber, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.IdentificationNumber)
                    </li>
                    <li>
                        <p>Passport Number</p>
                        @Html.EditorFor(model => model.PassportNumber, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.PassportNumber)
                    </li>
                    <li>
                        <p>Country Of Issuance</p>
                        @Html.DropDownListFor(x => x.CountryOfIssuance, Model.CountryDDList, "Country", new { @class = "gen-ftb" })
                        @Html.EditorFor(model => model.PassportNumber, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.CountryOfIssuance)
                    </li>
                    <li>
                        <p>Photo</p>
                        @Html.TextBoxFor(model => model.Photo, new { type = "file" })
                        @Html.EditorFor(model => model.PassportNumber, new { @class = "gen-ftb" })
                        @Html.ValidationMessageFor(model => model.Photo)
                    </li>*@
                    <li>
                        <label>

                            <input type="submit" name="button2" id="button2" value="Create Profile" class="submit" />
                        </label>
                        <a href="#">@Html.ActionLink("Back to List", "Index", null, new { @class = "menu-14u" })</a></li>
                    <div class="clr"></div>
                </ul>


            </div>
            <div class="clr"></div>

        </div>

    </div>
@*<fieldset style="font-family: Verdana; font-size: x-small">
        <legend>UserInfo</legend>

        <table style="font-family: Verdana; font-size: x-small">
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.FirstName)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.FirstName)
                        @Html.ValidationMessageFor(model => model.FirstName)
                    </div>
                </td>
                <td>
                    <div class="editor-label">@Html.LabelFor(model => model.LastName)

                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.LastName)
                        @Html.ValidationMessageFor(model => model.LastName)
                    </div>
                </td>
            </tr>



            <tr>
                <td>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Address.Address1)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Address.Address1)
                        @Html.ValidationMessageFor(model => model.Address.Address1)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Address.Address2)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Address.Address2)
                        @Html.ValidationMessageFor(model => model.Address.Address2)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Address.City)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Address.City)
                        @Html.ValidationMessageFor(model => model.Address.City)
                    </div>

                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Address.Zip)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Address.Zip)
                        @Html.ValidationMessageFor(model => model.Address.Zip)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Address.CountryID)
                    </div>
                    <div class="editor-field">

                        @Html.DropDownListFor(x => x.Address.CountryID, Model.CountryDDList, "Country")
                        @Html.ValidationMessageFor(model => model.Address.CountryID)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Address.Province)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Address.Province)
                        @Html.ValidationMessageFor(model => model.Address.Province)
                    </div>

                </td>

            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Address.Telephone)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Address.Telephone)
                        @Html.ValidationMessageFor(model => model.Address.Telephone)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Mobile)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Mobile)
                        @Html.ValidationMessageFor(model => model.Mobile)
                    </div>
                    <tr>
                        <td>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.SkypeID)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.SkypeID)
                                @Html.ValidationMessageFor(model => model.SkypeID)
                            </div>
                        </td>
                        <td>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.IdentificationNumber)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.IdentificationNumber)
                                @Html.ValidationMessageFor(model => model.IdentificationNumber)
                            </div>
                        </td>
                    </tr>
            <tr>
                <td>


                    <div class="editor-label">
                        @Html.LabelFor(model => model.PassportNumber)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.PassportNumber)
                        @Html.ValidationMessageFor(model => model.PassportNumber)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.CountryOfIssuance)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(x => x.CountryOfIssuance, Model.CountryDDList, "Country")

                    </div>
                </td>
            </tr>




            <tr>
                <td colspan="2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Photo)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Photo, new { type = "file" })
                        @Html.ValidationMessageFor(model => model.Photo)

                    </div>

        </table>


        <p>

            <input type="submit" value="Create Profile" />
        </p>
    </fieldset>*@
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
